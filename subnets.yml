Resources: 
  PublicSubnet0:     #public subnet for us-east(jumbox)
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId: 
        Fn::ImportValue: VPCId
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
  
  PrivateSubnet0:      #private subnet 
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.2.0/24
      VpcId: 
        Fn::ImportValue: VPCId
      AvailabilityZone: !Select 
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'

  PrivateSubnet1:      #private subnet 
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.3.0/24
      VpcId: 
        Fn::ImportValue: VPCId
      AvailabilityZone: !Select 
        - 2
        - Fn::GetAZs: !Ref 'AWS::Region'

  PublicSubnet1:     #public subnet for front facing server
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.4.0/24
      VpcId: 
        Fn::ImportValue: VPCId
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
  
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: 
        Fn::ImportValue: VPCId
      Tags:
      - Key: Name
        Value: Public
  PublicRoute1:   # Public route table has direct routing to IGW:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: 
        Fn::ImportValue: GId

  mySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet0
      RouteTableId: !Ref PublicRouteTable    
  
  RDSDBInstanceSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.4.0/24
      VpcId: 
        Fn::ImportValue: VPCId
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
  RDSDBInstanceSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.5.0/24
      VpcId: 
        Fn::ImportValue: VPCId
      AvailabilityZone: !Select 
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'

Outputs:
  PublicSubnet0:
    Description: Public Subnet 0
    Value: !Ref PublicSubnet0
    Export:
      Name: PublicSubnet0
    
  PrivateSubnet0:
    Description: Public Subnet 0
    Value: !Ref PrivateSubnet0
    Export:
      Name: PrivateSubnet0


  PrivateSubnet1:
    Description: Public Subnet 0
    Value: !Ref PrivateSubnet1
    Export:
      Name: PrivateSubnet1


  PublicSubnet1:
    Description: Public Subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name: PublicSubnet1
    
